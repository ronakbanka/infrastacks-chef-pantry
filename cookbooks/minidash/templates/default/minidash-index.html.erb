<html>
<head>
  <title>Cluster Dashboard</title>
</head>
<body>
  <h1>Cluster Chef Dashboard for <%= node.name %></h1>

  <p>Hello, I'm <%= node.name %>
   (cluster <code><%= node[:cluster_name] %></code>,
    facet   <code><%= node[:facet_name]   %></code>,
    index   <code><%= node[:facet_index]  %></code>).

    I announce services <%= node[:announces].keys.join(", ") %>.
  </p>

  <hr/>
  <h2>Service Dashboards</h2>
  <ul>
  <%- @minidash[:links].each do |component,url| %>
    <li><a href="<%= url %>"><%= component %></a></li>
  <%- end %>
  </ul>
  
  
  <hr/>
  <h2>Mini-Dashboards</h2>
  <ul>
    <%- Dir["#{@minidash[:home_dir]}/*.html"].sort.each do |filename| %>
    <li><a href="<%= File.basename(filename) %>"><%= File.basename(filename) %></a></li>
    <%- end %>
  </ul>

  <%- if @summary_keys %>
  <hr/>
  <h2>Interesting Facts</h2>
  <p>Here are some interesting facts about me:</p>
  <table class="interesting_facts">

    <tr><th colspan="2"><h3>Chef</h3></th></tr>
    <%= summary_row('name', node.name) %>
    <tr><th>announces</th><td><ul style="max-height:200px; overflow: scroll"><%- node[:announces].each do |svc, info| %><li><%= svc %>: <%= CGI::escapeHTML(info.to_hash.reject{|k,v| k == "timestamp" }.inspect) %></li><%- end %></ul></td></tr>
    <tr><th>run list</th><td><ul style="max-height:200px; overflow: scroll"><%- node.run_list.each do |rl| %><li><%= rl %></li><%- end %></ul></td></tr>

    <tr><th colspan="2"><h3>Volumes</h3></th></tr>
    <%- (node[:volumes]||{}).each do |vol_name, vol| %>
    <%= summary_row(vol_name, vol) %>
    <%- end %>
    
    <%- if @summary_keys && (not @summary_keys.empty?) %>
    <tr><th colspan="2"><h3>More</h3></th></tr>
    <%= summary_rows(node, @summary_keys) %>
    <%- end %>
    
  </table>
  <%- end %>
  
  <hr/>
  <h2>How to set up a tunneling proxy to your cluster</h2>
  <p>
    You'll have a lot more fun with this dashboard if you can browse the dashboards it links to.
    A tunneling SOCKS proxy lets you browse as if you were local.
  </p>
  <ul>
    <li>Run <code>knife cluster proxy <%= node.name %></code> &mdash; it ssh's to this machine with special flags that set up the proxy.</li>
    <li>Now launch your second-favorite browser and set it to use that proxy (port 6666, probably; here are some <a href="http://whatbox.ca/wiki/SSH_Tunneling#using_as_a_browser_proxy">reasonable-looking directions</a>).</li>
    <li>If you're using EC2 you can instead add <a href="http://github.com/infochimps-labs/ironfan/raw/master/config/proxy.pac">this Proxy Auto-Configuration (PAC)</a> file to your browser (here's some reasonable <a href="http://uitsaccounts.uconn.edu/guides/trouble/proxy/autoprox.html">illustrated directions</a> for doing so.)
        Now, sites with names like <code>ip-10-20-30-40-ec2.internal</code> or <code>ec2-75-76-77-80.compute-1.amazonaws.com</code> or even <code>10.20.30.40</code> go through the proxy; other than that, the web is yours.</li>
  </ul>

</body>
</html>
